{"version":3,"sources":["ng://ng-custom-select/lib/ng-select.component.ts","ng://ng-custom-select/lib/ng-select.module.ts"],"names":["NgSelectComponent","_eref","this","EventEmitter","_","searchTerm","FormControl","prototype","writeValue","obj","selectedItem","Object","keys","length","setValue","displayKey","registerOnTouched","registerOnChange","fn","propagateChange","validate","required","ngOnInit","_this","options","setTimeout","getCaretPosition","filterOptions","assign","isDatalist","initSearch","searchKeys","fromEvent","searchInput","nativeElement","pipe","map","e","target","value","debounceTime","distinctUntilChanged","switchMap","term","of","filter","option","i","len","toString","toLowerCase","indexOf","subscribe","list","changeValue","onChange","emit","closeDropdown","event","contains","active","computedStyles","window","getComputedStyle","querySelector","positionRight","getPropertyValue","Component","args","selector","template","styles","host","(document:click)","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","NG_VALIDATORS","ElementRef","Input","ViewChild","Output","NgSelectModule","NgModule","imports","CommonModule","FormsModule","ReactiveFormsModule","declarations","exports"],"mappings":"+dAAA,IAAAA,EAAA,WAkEE,SAAAA,EAAoBC,GAAAC,KAAAD,MAAAA,gBAVC,IAAIE,EAAAA,0BAMP,uBAQQ,SAACC,KAHzBF,KAAKG,WAAa,IAAIC,EAAAA,mBAKxBN,EAAAO,UAAAC,WAAA,SAAWC,IACTP,KAAKQ,aAAeD,IACbE,OAAOC,KAAKH,GAAKI,QAASX,KAAKG,WAAWS,SAASL,EAAIP,KAAKa,aAAeN,IAGpFT,EAAAO,UAAAS,kBAAA,aAEAhB,EAAAO,UAAAU,iBAAA,SAAiBC,GACfhB,KAAKiB,gBAAkBD,GAGzBlB,EAAAO,UAAAa,SAAA,WACE,OAAOlB,KAAKQ,aAAe,KAAO,CAAEW,UAAU,IAIhDrB,EAAAO,UAAAe,SAAA,WAAA,IAAAC,EAAArB,KACEA,KAAKQ,aAAeR,KAAKsB,QAAQ,GACjCC,WAAW,WACTF,EAAKG,qBAGFxB,KAAKa,YAAyC,iBAApBb,KAAKsB,QAAQ,KAC1CtB,KAAKa,WAAaJ,OAAOC,KAAKV,KAAKsB,QAAQ,IAAI,IACjDtB,KAAKG,WAAWS,SAASZ,KAAKsB,QAAQ,GAAGtB,KAAKa,aAAeb,KAAKsB,QAAQ,IAC1EtB,KAAKyB,cAAgBhB,OAAOiB,OAAO,GAAI1B,KAAKsB,SAC5CtB,KAAK2B,YAAa3B,KAAK4B,cAGzB9B,EAAAO,UAAAuB,WAAA,WAAA,IAAAP,EAAArB,KACQA,KAAK6B,YAAe7B,KAAK6B,WAAWlB,SAAWX,KAAKa,YAAyC,iBAApBb,KAAKsB,QAAQ,GAElFtB,KAAKa,YAAyC,iBAApBb,KAAKsB,QAAQ,KAC/CtB,KAAK6B,WAAa,CAAC,MAFnB7B,KAAK6B,WAAa,CAAC7B,KAAKa,YAI1BiB,EAAAA,UAAU9B,KAAK+B,YAAYC,cAAe,SACvCC,KACCC,EAAAA,IAAI,SAACC,GAAW,OAAAA,EAAEC,OAAOC,QACzBC,EAAAA,aAAa,KACbC,EAAAA,uBACAC,EAAAA,UAAU,SAAAC,GACR,OAAOC,EAAAA,GACLrB,EAAKC,QAAQqB,OAAO,SAAAC,GAClB,IAAK,IAAIC,EAAI,EAAGC,EAAMzB,EAAKQ,WAAWlB,OAAQkC,EAAIC,EAAKD,IAAK,CAC1D,GAAsB,iBAAXD,IAA0G,EAAnFA,EAAOvB,EAAKQ,WAAWgB,IAAIE,WAAWC,cAAcC,QAAQR,EAAKO,eACjG,OAAOJ,EACF,GAAsB,iBAAXA,IAAsF,EAA/DA,EAAOG,WAAWC,cAAcC,QAAQR,EAAKO,eACpF,OAAOJ,SAMlBM,UAAU,SAAAC,GACT9B,EAAKI,cAAgB0B,KAI3BrD,EAAAO,UAAA+C,YAAA,SAAYR,GACV5C,KAAKG,WAAWS,SAASgC,EAAO5C,KAAKa,aAAe+B,GACpD5C,KAAKiB,gBAAgB2B,GACrB5C,KAAKqD,SAASC,KAAKV,GACnB5C,KAAKQ,aAAeoC,EACpB5C,KAAKyB,cAAgBzB,KAAK2B,WAAalB,OAAOiB,OAAO,GAAI1B,KAAKsB,SAAWtB,KAAKyB,eAGhF3B,EAAAO,UAAAkD,cAAA,SAAcC,GACPxD,KAAKD,MAAMiC,cAAcyB,SAASD,EAAMpB,UAC3CpC,KAAK0D,QAAS,EACd1D,KAAKG,WAAWS,SAASZ,KAAKQ,aAAaR,KAAKa,aAAeb,KAAKQ,cACpER,KAAKyB,cAAgBhB,OAAOiB,OAAO,GAAI1B,KAAKsB,WAIhDxB,EAAAO,UAAAmB,iBAAA,WACE,IAAImC,EAAiBC,OAAOC,iBAAiB7D,KAAKD,MAAMiC,cAAc8B,cAAc,wBAAyB,MAE7G9D,KAAK+D,cAAgBJ,EAAeK,iBAAiB,sCA/IxDC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,YACVC,SAAU,+tBASVC,OAAQ,CAAC,u8BACTC,KAAM,CACJC,mBAAoB,yBAEtBC,UAAW,CACT,CACEC,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAW,WAAM,OAAA9E,IAC9B+E,OAAO,GAET,CACEJ,QAASK,EAAAA,cACTH,YAAaC,EAAAA,WAAW,WAAM,OAAA9E,IAC9B+E,OAAO,iDA9B4CE,EAAAA,+CAqCtDC,EAAAA,0BAGAA,EAAAA,0BAGAA,EAAAA,0BAGAA,EAAAA,uBAGAA,EAAAA,0BAGAA,EAAAA,2BAEAC,EAAAA,UAASf,KAAA,CAAC,iCAEVgB,EAAAA,YAxDH,GCAAC,EAAA,oDAKCC,EAAAA,SAAQlB,KAAA,CAAC,CACRmB,QAAS,CACPC,EAAAA,aACAC,EAAAA,YACAC,EAAAA,qBAEFC,aAAc,CAAC3F,GACf4F,QAAS,CAAC5F,SAZZ","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter, ElementRef, ViewChild, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, ControlValueAccessor, Validator, ValidationErrors, FormControl } from '@angular/forms';\nimport { Observable, fromEvent, of } from 'rxjs';\nimport { sample, distinctUntilChanged, switchMap, debounceTime, map } from \"rxjs/operators\";\n\n\n@Component({\n  selector: 'ng-select',\n  template: `<div class=\"ng-dropdown-wrapper\" [class]=\"styleGuide?.selectBoxClass\" tabindex=\"0\" (click)=\"active=!active\" [ngClass]=\"{'active':active, 'disabled': disable}\">\n    <input type=\"text\" name=\"searchTerm\" tabindex=\"-1\" [formControl]=\"searchTerm\" [readonly]=\"!isDatalist\" #searchInput>\n    <span [class]=\"styleGuide?.caretClass\" id=\"caret\" [ngStyle]=\"{'right':positionRight}\" [ngClass]=\"{'icon':!styleGuide?.caretClass}\"></span>\n    <ul [ngClass]=\"{'ng-dropdown-menu' : true}\" [class]=\"styleGuide?.selectMenuClass\">\n        <li *ngFor=\"let option of filterOptions\" (click)=\"changeValue(option)\" [class]=\"styleGuide?.optionsClass\">\n            <span>{{option[displayKey] || option}}</span>\n        </li>\n    </ul>\n</div>`,\n  styles: [`@charset \"UTF-8\";.ng-dropdown-wrapper{display:inline-block;position:relative}.ng-dropdown-wrapper input[type=text]{width:90%;border:none;outline:0;text-transform:capitalize}.ng-dropdown-wrapper #caret{position:absolute;right:0;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%);z-index:999}.ng-dropdown-wrapper .icon::after{content:\"â¼\";text-align:center;pointer-events:none}.ng-dropdown-wrapper .ng-dropdown-menu{display:none;position:absolute;top:102%;left:0;right:0;list-style:none;overflow:auto;z-index:9999}.ng-dropdown-wrapper .ng-dropdown-menu li span{text-transform:capitalize;transition:all .3s ease-out}.ng-dropdown-wrapper.active #caret{-webkit-transform:translateY(-50%) rotate(180deg);transform:translateY(-50%) rotate(180deg)}.ng-dropdown-wrapper.active .ng-dropdown-menu{display:block}.disabled{cursor:not-allowed;pointer-events:none;opacity:.7;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}`],\n  host: {\n    '(document:click)': 'closeDropdown($event)',\n  },\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgSelectComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => NgSelectComponent),\n      multi: true,\n    }\n  ]\n})\nexport class NgSelectComponent implements OnInit, ControlValueAccessor, Validator {\n\n  // List of options\n  @Input() options: Array<any>;\n\n  //name of key to displayed as options\n  @Input() displayKey: string;\n\n  //contains various Config classes for dropdown \n  @Input() styleGuide: any;\n\n  //True if Dropdown should behave like a datalist\n  @Input() isDatalist: boolean;\n\n  //True if select box is disabled\n  @Input() disable : boolean;\n\n  //List of properties for which searching is applied in list\n  @Input() searchKeys: Array<string>;\n\n  @ViewChild('searchInput') searchInput: ElementRef;\n\n  @Output() onChange = new EventEmitter();\n\n  selectedItem: any;\n  searchTerm: FormControl;\n  filterOptions: Array<any>;\n\n  active: boolean = false;\n  positionTop: any;\n  positionRight: any;\n\n  constructor(private _eref: ElementRef) {\n    this.searchTerm = new FormControl();\n  }\n\n  private propagateChange = (_: any) => { }\n\n  writeValue(obj: any) {\n    this.selectedItem = obj;\n    obj && Object.keys(obj).length ? this.searchTerm.setValue(obj[this.displayKey] || obj) : null;\n  }\n\n  registerOnTouched() { }\n\n  registerOnChange(fn: any) {\n    this.propagateChange = fn;\n  }\n\n  validate(): ValidationErrors {\n    return this.selectedItem ? null : { required: true };\n  }\n\n\n  ngOnInit() {\n    this.selectedItem = this.options[0];\n    setTimeout(() => {\n      this.getCaretPosition();\n    })\n\n    if (!this.displayKey && typeof this.options[0] === 'object')\n      this.displayKey = Object.keys(this.options[0])[0];\n    this.searchTerm.setValue(this.options[0][this.displayKey] || this.options[0]);\n    this.filterOptions = Object.assign([], this.options);\n    this.isDatalist ? this.initSearch() : null;\n  }\n\n  initSearch() {\n    if ((!this.searchKeys || !this.searchKeys.length) && this.displayKey && typeof this.options[0] === 'object')\n      this.searchKeys = [this.displayKey];\n    else if (!this.displayKey || typeof this.options[0] !== 'object')\n      this.searchKeys = ['0'];\n\n    fromEvent(this.searchInput.nativeElement, 'input')\n      .pipe(\n        map((e: any) => e.target.value),\n        debounceTime(100),\n        distinctUntilChanged(),\n        switchMap(term => {\n          return of(\n            this.options.filter(option => {\n              for (let i = 0, len = this.searchKeys.length; i < len; i++) {\n                if (typeof option === \"object\" && option[this.searchKeys[i]].toString().toLowerCase().indexOf(term.toLowerCase()) > -1) {\n                  return option;\n                } else if (typeof option !== \"object\" && option.toString().toLowerCase().indexOf(term.toLowerCase()) > -1)\n                  return option;\n              }\n            })\n          )\n        }\n        ))\n      .subscribe(list => {\n        this.filterOptions = list;\n      });\n  }\n\n  changeValue(option) {\n    this.searchTerm.setValue(option[this.displayKey] || option);\n    this.propagateChange(option);\n    this.onChange.emit(option);\n    this.selectedItem = option;\n    this.filterOptions = this.isDatalist ? Object.assign([], this.options) : this.filterOptions;\n  }\n\n  closeDropdown(event) {\n    if (!this._eref.nativeElement.contains(event.target)) {\n      this.active = false;\n      this.searchTerm.setValue(this.selectedItem[this.displayKey] || this.selectedItem);\n      this.filterOptions = Object.assign([], this.options);\n    }\n  }\n\n  getCaretPosition() {\n    let computedStyles = window.getComputedStyle(this._eref.nativeElement.querySelector('.ng-dropdown-wrapper'), null);\n    //this.positionTop = computedStyles.getPropertyValue(\"padding-top\");\n    this.positionRight = computedStyles.getPropertyValue(\"padding-right\");\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgSelectComponent } from './ng-select.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  declarations: [NgSelectComponent],\n  exports: [NgSelectComponent]\n})\nexport class NgSelectModule { }\n"]}