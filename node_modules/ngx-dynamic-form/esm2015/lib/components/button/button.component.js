/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, IterableDiffers, HostBinding } from '@angular/core';
export class FormButtonComponent {
    /**
     * @param {?} differs
     */
    constructor(differs) {
        this.differ = differs.find([]).create(null);
    }
    /**
     * @return {?}
     */
    get hostClass() {
        return this.config.divClass;
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
    }
    /**
     * @return {?}
     */
    ngDoCheck() {
        setTimeout(() => {
            /** @type {?} */
            const change = this.differ.diff(this.btn);
            if (document.querySelector('form').className.includes('ng-invalid')
                && this.config.inputType.toLowerCase() === 'submit') {
                this.config.disabled = true;
            }
            else {
                this.config.disabled = false;
            }
        }, 10);
    }
}
FormButtonComponent.decorators = [
    { type: Component, args: [{
                selector: 'form-button',
                styles: [``],
                template: `<div *ngIf='!config.hidden' class="form-input" [formGroup]="formGroup">
    <label [ngClass]="config.labelClass" *ngIf="config.label && config.label!=''">{{ config.label }}</label>
    <div class="dynamic-field form-button">
        <button [disabled]="config.disabled" [ngClass]="config.class" type="submit">
        {{ config.text }}
        </button>
    </div>
</div>`
            },] },
];
/** @nocollapse */
FormButtonComponent.ctorParameters = () => [
    { type: IterableDiffers }
];
FormButtonComponent.propDecorators = {
    hostClass: [{ type: HostBinding, args: ['class',] }]
};
function FormButtonComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    FormButtonComponent.prototype.config;
    /** @type {?} */
    FormButtonComponent.prototype.formGroup;
    /** @type {?} */
    FormButtonComponent.prototype.differ;
    /** @type {?} */
    FormButtonComponent.prototype.btn;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnV0dG9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1keW5hbWljLWZvcm0vIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9idXR0b24vYnV0dG9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBYyxlQUFlLEVBQTBCLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQWtCNUcsTUFBTTs7OztJQU1KLFlBQ0UsT0FBd0I7UUFDdEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUNqRDs7OztJQUdELElBQ0ksU0FBUztRQUNMLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQztLQUMvQjs7OztJQUVILGVBQWU7S0FDZDs7OztJQUVELFNBQVM7UUFDTCxVQUFVLENBQUMsR0FBRyxFQUFFOztZQUNoQixNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDMUMsRUFBRSxDQUFDLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUMsQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQzttQkFDNUQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsV0FBVyxFQUFFLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBQztnQkFDcEQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO2FBQ2pDO1lBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ04sSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO2FBQzlCO1NBQ0YsRUFBRSxFQUFFLENBQUUsQ0FBQztLQUNUOzs7WUExQ0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxhQUFhO2dCQUN2QixNQUFNLEVBQUUsQ0FBQyxFQUFFLENBQUM7Z0JBQ1osUUFBUSxFQUFFOzs7Ozs7O09BT0w7YUFDTjs7OztZQWpCK0IsZUFBZTs7O3dCQThCOUMsV0FBVyxTQUFDLE9BQU8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIEl0ZXJhYmxlRGlmZmVycywgQWZ0ZXJWaWV3SW5pdCwgRG9DaGVjaywgSG9zdEJpbmRpbmcgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1Hcm91cCB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuaW1wb3J0IHsgRmllbGQgfSBmcm9tICcuLi8uLi9pbnRlcmZhY2VzL2ZpZWxkLmludGVyZmFjZSc7XG5pbXBvcnQgeyBGaWVsZENvbmZpZyB9IGZyb20gJy4uLy4uL2ludGVyZmFjZXMvZmllbGQtY29uZmlnLmludGVyZmFjZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2Zvcm0tYnV0dG9uJyxcbiAgc3R5bGVzOiBbYGBdLFxuICB0ZW1wbGF0ZTogYDxkaXYgKm5nSWY9JyFjb25maWcuaGlkZGVuJyBjbGFzcz1cImZvcm0taW5wdXRcIiBbZm9ybUdyb3VwXT1cImZvcm1Hcm91cFwiPlxuICAgIDxsYWJlbCBbbmdDbGFzc109XCJjb25maWcubGFiZWxDbGFzc1wiICpuZ0lmPVwiY29uZmlnLmxhYmVsICYmIGNvbmZpZy5sYWJlbCE9JydcIj57eyBjb25maWcubGFiZWwgfX08L2xhYmVsPlxuICAgIDxkaXYgY2xhc3M9XCJkeW5hbWljLWZpZWxkIGZvcm0tYnV0dG9uXCI+XG4gICAgICAgIDxidXR0b24gW2Rpc2FibGVkXT1cImNvbmZpZy5kaXNhYmxlZFwiIFtuZ0NsYXNzXT1cImNvbmZpZy5jbGFzc1wiIHR5cGU9XCJzdWJtaXRcIj5cbiAgICAgICAge3sgY29uZmlnLnRleHQgfX1cbiAgICAgICAgPC9idXR0b24+XG4gICAgPC9kaXY+XG48L2Rpdj5gXG59KVxuZXhwb3J0IGNsYXNzIEZvcm1CdXR0b25Db21wb25lbnQgaW1wbGVtZW50cyBGaWVsZCwgQWZ0ZXJWaWV3SW5pdCwgRG9DaGVjayB7XG4gIGNvbmZpZzogRmllbGRDb25maWc7XG4gIGZvcm1Hcm91cDogRm9ybUdyb3VwO1xuICBkaWZmZXI6IGFueTtcbiAgYnRuOiBhbnk7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgZGlmZmVyczogSXRlcmFibGVEaWZmZXJzKSB7XG4gICAgICB0aGlzLmRpZmZlciA9IGRpZmZlcnMuZmluZChbXSkuY3JlYXRlKG51bGwpO1xufVxuXG5cbkBIb3N0QmluZGluZygnY2xhc3MnKVxuZ2V0IGhvc3RDbGFzcygpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy5jb25maWcuZGl2Q2xhc3M7XG4gICAgfVxuXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgfVxuXG4gIG5nRG9DaGVjaygpIHtcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgY29uc3QgY2hhbmdlID0gdGhpcy5kaWZmZXIuZGlmZih0aGlzLmJ0bik7XG4gICAgICBpZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignZm9ybScpLmNsYXNzTmFtZS5pbmNsdWRlcygnbmctaW52YWxpZCcpXG4gICAgICAgICAgJiYgdGhpcy5jb25maWcuaW5wdXRUeXBlLnRvTG93ZXJDYXNlKCkgPT09ICdzdWJtaXQnKSB7XG4gICAgICAgICAgICB0aGlzLmNvbmZpZy5kaXNhYmxlZCA9IHRydWU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmNvbmZpZy5kaXNhYmxlZCA9IGZhbHNlO1xuICAgICAgfVxuICAgIH0sIDEwICk7XG4gIH1cbn1cbiJdfQ==