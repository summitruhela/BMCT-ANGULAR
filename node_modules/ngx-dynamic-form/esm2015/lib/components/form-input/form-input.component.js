/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, HostBinding } from '@angular/core';
export class FormInputComponent {
    constructor() { }
    /**
     * @return {?}
     */
    get hostClass() {
        return this.config.divClass;
    }
}
FormInputComponent.decorators = [
    { type: Component, args: [{
                // tslint:disable-next-line:component-selector
                selector: 'form-input',
                styles: [`input[type=submit]{margin-top:.5rem 1rem}.form-input{height:38px;border-radius:3.5px;background-color:#fff;border:1px solid #bdbdbd;margin-bottom:15px}label{margin-bottom:8px;font-size:16px}`, `input[type=submit]{margin-top:.5rem 1rem}.form-input{height:38px;border-radius:3.5px;background-color:#fff;border:1px solid #bdbdbd;margin-bottom:15px}label{margin-bottom:8px;font-size:16px}`],
                template: `<div *ngIf='!config.hidden' [formGroup]="formGroup">
    <label [ngClass]="config.labelClass" *ngIf="config.label && config.label!=''">{{ config.label }}</label>
    <input *ngIf="config.type ==='input' && !config.fromEnum " class="form-input" value={{config.text}} [disabled]="config.disabled" type={{config.inputType}} [ngClass]="config.class" [attr.placeholder]="config.placeholder" [formControlName]="config.name"
    />

    <select *ngIf="config.type==='select' && !config.fromEnum && !config.hidden" class="form-input" [formControlName]="config.name" [ngClass]=config.class>
        <option value='' [selected]="true">{{ config.placeholder }}</option>
        <option value={{option}}
                *ngFor="let option of config.options">
                {{option}}
        </option>
    </select>
    <select class="form-input" *ngIf="config.type==='select' && config.fromEnum && !config.hidden" [formControlName]="config.name" [ngClass]=config.class>
        <option value="" [selected]="true">{{ config.placeholder }}</option>
        <option value={{config.options[0][i]}}
                *ngFor="let o of config.options[0]; let i=index">
                {{ config.options[1][i] }}
        </option>
    </select>

    <textarea class="form-input" *ngIf="config.type==='textarea' && !config.hidden" [formControlName]="config.name" [attr.placeholder]="config.placeholder" rows={{config.rows}} cols={{config.cols}}></textarea>

    <ng-datepicker class="form-input" [ngClass]="config.class" *ngIf="config.type ==='date'" [formControlName]="config.name"></ng-datepicker>
</div>`
            },] },
];
/** @nocollapse */
FormInputComponent.ctorParameters = () => [];
FormInputComponent.propDecorators = {
    hostClass: [{ type: HostBinding, args: ['class',] }]
};
function FormInputComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    FormInputComponent.prototype.config;
    /** @type {?} */
    FormInputComponent.prototype.formGroup;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1pbnB1dC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtZHluYW1pYy1mb3JtLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvZm9ybS1pbnB1dC9mb3JtLWlucHV0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFvQ3ZELE1BQU07SUFHRixpQkFBaUI7Ozs7SUFFakIsSUFDSSxTQUFTO1FBQ0wsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDO0tBQy9COzs7WUF0Q1IsU0FBUyxTQUFDOztnQkFFUCxRQUFRLEVBQUUsWUFBWTtnQkFDdEIsTUFBTSxFQUFFLENBQUMsZ01BQWdNLEVBQUUsZ01BQWdNLENBQUM7Z0JBQzVZLFFBQVEsRUFBRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7T0F1QlA7YUFDTjs7Ozs7d0JBT0ksV0FBVyxTQUFDLE9BQU8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEhvc3RCaW5kaW5nIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3JtR3JvdXAgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBGaWVsZCB9IGZyb20gJy4uLy4uL2ludGVyZmFjZXMvZmllbGQuaW50ZXJmYWNlJztcbmltcG9ydCB7IEZpZWxkQ29uZmlnIH0gZnJvbSAnLi4vLi4vaW50ZXJmYWNlcy9maWVsZC1jb25maWcuaW50ZXJmYWNlJztcblxuXG5AQ29tcG9uZW50KHtcbiAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6Y29tcG9uZW50LXNlbGVjdG9yXG4gICAgc2VsZWN0b3I6ICdmb3JtLWlucHV0JyxcbiAgICBzdHlsZXM6IFtgaW5wdXRbdHlwZT1zdWJtaXRde21hcmdpbi10b3A6LjVyZW0gMXJlbX0uZm9ybS1pbnB1dHtoZWlnaHQ6MzhweDtib3JkZXItcmFkaXVzOjMuNXB4O2JhY2tncm91bmQtY29sb3I6I2ZmZjtib3JkZXI6MXB4IHNvbGlkICNiZGJkYmQ7bWFyZ2luLWJvdHRvbToxNXB4fWxhYmVse21hcmdpbi1ib3R0b206OHB4O2ZvbnQtc2l6ZToxNnB4fWAsIGBpbnB1dFt0eXBlPXN1Ym1pdF17bWFyZ2luLXRvcDouNXJlbSAxcmVtfS5mb3JtLWlucHV0e2hlaWdodDozOHB4O2JvcmRlci1yYWRpdXM6My41cHg7YmFja2dyb3VuZC1jb2xvcjojZmZmO2JvcmRlcjoxcHggc29saWQgI2JkYmRiZDttYXJnaW4tYm90dG9tOjE1cHh9bGFiZWx7bWFyZ2luLWJvdHRvbTo4cHg7Zm9udC1zaXplOjE2cHh9YF0sXG4gICAgdGVtcGxhdGU6IGA8ZGl2ICpuZ0lmPSchY29uZmlnLmhpZGRlbicgW2Zvcm1Hcm91cF09XCJmb3JtR3JvdXBcIj5cbiAgICA8bGFiZWwgW25nQ2xhc3NdPVwiY29uZmlnLmxhYmVsQ2xhc3NcIiAqbmdJZj1cImNvbmZpZy5sYWJlbCAmJiBjb25maWcubGFiZWwhPScnXCI+e3sgY29uZmlnLmxhYmVsIH19PC9sYWJlbD5cbiAgICA8aW5wdXQgKm5nSWY9XCJjb25maWcudHlwZSA9PT0naW5wdXQnICYmICFjb25maWcuZnJvbUVudW0gXCIgY2xhc3M9XCJmb3JtLWlucHV0XCIgdmFsdWU9e3tjb25maWcudGV4dH19IFtkaXNhYmxlZF09XCJjb25maWcuZGlzYWJsZWRcIiB0eXBlPXt7Y29uZmlnLmlucHV0VHlwZX19IFtuZ0NsYXNzXT1cImNvbmZpZy5jbGFzc1wiIFthdHRyLnBsYWNlaG9sZGVyXT1cImNvbmZpZy5wbGFjZWhvbGRlclwiIFtmb3JtQ29udHJvbE5hbWVdPVwiY29uZmlnLm5hbWVcIlxuICAgIC8+XG5cbiAgICA8c2VsZWN0ICpuZ0lmPVwiY29uZmlnLnR5cGU9PT0nc2VsZWN0JyAmJiAhY29uZmlnLmZyb21FbnVtICYmICFjb25maWcuaGlkZGVuXCIgY2xhc3M9XCJmb3JtLWlucHV0XCIgW2Zvcm1Db250cm9sTmFtZV09XCJjb25maWcubmFtZVwiIFtuZ0NsYXNzXT1jb25maWcuY2xhc3M+XG4gICAgICAgIDxvcHRpb24gdmFsdWU9JycgW3NlbGVjdGVkXT1cInRydWVcIj57eyBjb25maWcucGxhY2Vob2xkZXIgfX08L29wdGlvbj5cbiAgICAgICAgPG9wdGlvbiB2YWx1ZT17e29wdGlvbn19XG4gICAgICAgICAgICAgICAgKm5nRm9yPVwibGV0IG9wdGlvbiBvZiBjb25maWcub3B0aW9uc1wiPlxuICAgICAgICAgICAgICAgIHt7b3B0aW9ufX1cbiAgICAgICAgPC9vcHRpb24+XG4gICAgPC9zZWxlY3Q+XG4gICAgPHNlbGVjdCBjbGFzcz1cImZvcm0taW5wdXRcIiAqbmdJZj1cImNvbmZpZy50eXBlPT09J3NlbGVjdCcgJiYgY29uZmlnLmZyb21FbnVtICYmICFjb25maWcuaGlkZGVuXCIgW2Zvcm1Db250cm9sTmFtZV09XCJjb25maWcubmFtZVwiIFtuZ0NsYXNzXT1jb25maWcuY2xhc3M+XG4gICAgICAgIDxvcHRpb24gdmFsdWU9XCJcIiBbc2VsZWN0ZWRdPVwidHJ1ZVwiPnt7IGNvbmZpZy5wbGFjZWhvbGRlciB9fTwvb3B0aW9uPlxuICAgICAgICA8b3B0aW9uIHZhbHVlPXt7Y29uZmlnLm9wdGlvbnNbMF1baV19fVxuICAgICAgICAgICAgICAgICpuZ0Zvcj1cImxldCBvIG9mIGNvbmZpZy5vcHRpb25zWzBdOyBsZXQgaT1pbmRleFwiPlxuICAgICAgICAgICAgICAgIHt7IGNvbmZpZy5vcHRpb25zWzFdW2ldIH19XG4gICAgICAgIDwvb3B0aW9uPlxuICAgIDwvc2VsZWN0PlxuXG4gICAgPHRleHRhcmVhIGNsYXNzPVwiZm9ybS1pbnB1dFwiICpuZ0lmPVwiY29uZmlnLnR5cGU9PT0ndGV4dGFyZWEnICYmICFjb25maWcuaGlkZGVuXCIgW2Zvcm1Db250cm9sTmFtZV09XCJjb25maWcubmFtZVwiIFthdHRyLnBsYWNlaG9sZGVyXT1cImNvbmZpZy5wbGFjZWhvbGRlclwiIHJvd3M9e3tjb25maWcucm93c319IGNvbHM9e3tjb25maWcuY29sc319PjwvdGV4dGFyZWE+XG5cbiAgICA8bmctZGF0ZXBpY2tlciBjbGFzcz1cImZvcm0taW5wdXRcIiBbbmdDbGFzc109XCJjb25maWcuY2xhc3NcIiAqbmdJZj1cImNvbmZpZy50eXBlID09PSdkYXRlJ1wiIFtmb3JtQ29udHJvbE5hbWVdPVwiY29uZmlnLm5hbWVcIj48L25nLWRhdGVwaWNrZXI+XG48L2Rpdj5gXG59KVxuXG5leHBvcnQgY2xhc3MgRm9ybUlucHV0Q29tcG9uZW50IGltcGxlbWVudHMgRmllbGQge1xuICAgIGNvbmZpZzogRmllbGRDb25maWc7XG4gICAgZm9ybUdyb3VwOiBGb3JtR3JvdXA7XG4gICAgY29uc3RydWN0b3IoKSB7IH1cblxuICAgIEBIb3N0QmluZGluZygnY2xhc3MnKVxuICAgIGdldCBob3N0Q2xhc3MoKTogc3RyaW5nIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNvbmZpZy5kaXZDbGFzcztcbiAgICAgICAgfVxufVxuXG4iXX0=