/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, HostBinding } from '@angular/core';
var FormFileUploadComponent = /** @class */ (function () {
    function FormFileUploadComponent() {
    }
    Object.defineProperty(FormFileUploadComponent.prototype, "hostClass", {
        get: /**
         * @return {?}
         */
        function () {
            return this.config.divClass;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} event
     * @return {?}
     */
    FormFileUploadComponent.prototype.handleFileUpload = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        (/** @type {?} */ (this.formGroup.controls[this.config.name]))
            .setValue(this.config.multiple ? event.currentTarget.files : event.currentTarget.files[0]);
    };
    FormFileUploadComponent.decorators = [
        { type: Component, args: [{
                    selector: 'form-file-upload',
                    styles: ["", "input[type=submit]{margin-top:.5rem 1rem}.form-input{height:38px;border-radius:3.5px;background-color:#fff;border:1px solid #bdbdbd;margin-bottom:15px}label{margin-bottom:8px;font-size:16px}"],
                    template: "<div *ngIf='!config.hidden' [formGroup]=\"formGroup\">\n    <label [ngClass]=\"config.labelClass\" *ngIf=\"config.label && config.label!=''\">{{ config.label }}</label>\n    <div class=\"dynamic-field form-select\">\n        <input [disabled]=\"config.disabled\" class=\"form-input\" type='file' (change)='handleFileUpload($event)' [accept]=\"config.accept\" [ngClass]=\"config.class\" [attr.placeholder]=\"config.placeholder\" />\n    </div>\n</div>"
                },] },
    ];
    FormFileUploadComponent.propDecorators = {
        hostClass: [{ type: HostBinding, args: ['class',] }]
    };
    return FormFileUploadComponent;
}());
export { FormFileUploadComponent };
function FormFileUploadComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    FormFileUploadComponent.prototype.config;
    /** @type {?} */
    FormFileUploadComponent.prototype.formGroup;
}
/**
 * @record
 */
export function FileConfig() { }
function FileConfig_tsickle_Closure_declarations() {
    /** @type {?} */
    FileConfig.prototype.multiple;
    /** @type {?} */
    FileConfig.prototype.accept;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS11cGxvYWQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWR5bmFtaWMtZm9ybS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL2ZpbGUtdXBsb2FkL2ZpbGUtdXBsb2FkLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7SUFvQnJELHNCQUNNLDhDQUFTOzs7O1FBRGY7WUFFVSxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUM7U0FDL0I7OztPQUFBOzs7OztJQUVQLGtEQUFnQjs7OztJQUFoQixVQUFpQixLQUFLO1FBQ3BCLG1CQUFjLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUM7YUFDdkQsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFBLENBQUMsQ0FBRSxLQUFLLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQSxDQUFDLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUN6Rjs7Z0JBdEJKLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsa0JBQWtCO29CQUM1QixNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUUsZ01BQWdNLENBQUM7b0JBQzlNLFFBQVEsRUFBRSxvY0FLTDtpQkFDTjs7OzRCQUtFLFdBQVcsU0FBQyxPQUFPOztrQ0FwQnRCOztTQWdCYSx1QkFBdUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEhvc3RCaW5kaW5nIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3JtR3JvdXAsIEZvcm1Db250cm9sIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5pbXBvcnQgeyBGaWVsZCB9IGZyb20gJy4uLy4uL2ludGVyZmFjZXMvZmllbGQuaW50ZXJmYWNlJztcbmltcG9ydCB7IEZpZWxkQ29uZmlnIH0gZnJvbSAnLi4vLi4vaW50ZXJmYWNlcy9maWVsZC1jb25maWcuaW50ZXJmYWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZm9ybS1maWxlLXVwbG9hZCcsXG4gIHN0eWxlczogW2BgLCBgaW5wdXRbdHlwZT1zdWJtaXRde21hcmdpbi10b3A6LjVyZW0gMXJlbX0uZm9ybS1pbnB1dHtoZWlnaHQ6MzhweDtib3JkZXItcmFkaXVzOjMuNXB4O2JhY2tncm91bmQtY29sb3I6I2ZmZjtib3JkZXI6MXB4IHNvbGlkICNiZGJkYmQ7bWFyZ2luLWJvdHRvbToxNXB4fWxhYmVse21hcmdpbi1ib3R0b206OHB4O2ZvbnQtc2l6ZToxNnB4fWBdLFxuICB0ZW1wbGF0ZTogYDxkaXYgKm5nSWY9JyFjb25maWcuaGlkZGVuJyBbZm9ybUdyb3VwXT1cImZvcm1Hcm91cFwiPlxuICAgIDxsYWJlbCBbbmdDbGFzc109XCJjb25maWcubGFiZWxDbGFzc1wiICpuZ0lmPVwiY29uZmlnLmxhYmVsICYmIGNvbmZpZy5sYWJlbCE9JydcIj57eyBjb25maWcubGFiZWwgfX08L2xhYmVsPlxuICAgIDxkaXYgY2xhc3M9XCJkeW5hbWljLWZpZWxkIGZvcm0tc2VsZWN0XCI+XG4gICAgICAgIDxpbnB1dCBbZGlzYWJsZWRdPVwiY29uZmlnLmRpc2FibGVkXCIgY2xhc3M9XCJmb3JtLWlucHV0XCIgdHlwZT0nZmlsZScgKGNoYW5nZSk9J2hhbmRsZUZpbGVVcGxvYWQoJGV2ZW50KScgW2FjY2VwdF09XCJjb25maWcuYWNjZXB0XCIgW25nQ2xhc3NdPVwiY29uZmlnLmNsYXNzXCIgW2F0dHIucGxhY2Vob2xkZXJdPVwiY29uZmlnLnBsYWNlaG9sZGVyXCIgLz5cbiAgICA8L2Rpdj5cbjwvZGl2PmBcbn0pXG5leHBvcnQgY2xhc3MgRm9ybUZpbGVVcGxvYWRDb21wb25lbnQgaW1wbGVtZW50cyBGaWVsZCB7XG4gIGNvbmZpZzogRmlsZUNvbmZpZztcbiAgZm9ybUdyb3VwOiBGb3JtR3JvdXA7XG5cbiAgQEhvc3RCaW5kaW5nKCdjbGFzcycpXG4gICAgZ2V0IGhvc3RDbGFzcygpOiBzdHJpbmcge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuY29uZmlnLmRpdkNsYXNzO1xuICAgICAgICB9XG5cbiAgaGFuZGxlRmlsZVVwbG9hZChldmVudCl7XG4gICAgKDxGb3JtQ29udHJvbD50aGlzLmZvcm1Hcm91cC5jb250cm9sc1t0aGlzLmNvbmZpZy5uYW1lXSlcbiAgICAuc2V0VmFsdWUodGhpcy5jb25maWcubXVsdGlwbGU/ICBldmVudC5jdXJyZW50VGFyZ2V0LmZpbGVzOiBldmVudC5jdXJyZW50VGFyZ2V0LmZpbGVzWzBdKTtcbiAgICB9XG5cbn1cblxuZXhwb3J0IGludGVyZmFjZSBGaWxlQ29uZmlnIGV4dGVuZHMgRmllbGRDb25maWd7XG4gICAgICBtdWx0aXBsZTogYm9vbGVhbixcbiAgICAgIGFjY2VwdDogc3RyaW5nLFxuXG59Il19