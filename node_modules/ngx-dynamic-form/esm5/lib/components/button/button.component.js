/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, IterableDiffers, HostBinding } from '@angular/core';
var FormButtonComponent = /** @class */ (function () {
    function FormButtonComponent(differs) {
        this.differ = differs.find([]).create(null);
    }
    Object.defineProperty(FormButtonComponent.prototype, "hostClass", {
        get: /**
         * @return {?}
         */
        function () {
            return this.config.divClass;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    FormButtonComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    FormButtonComponent.prototype.ngDoCheck = /**
     * @return {?}
     */
    function () {
        var _this = this;
        setTimeout(function () {
            /** @type {?} */
            var change = _this.differ.diff(_this.btn);
            if (document.querySelector('form').className.includes('ng-invalid')
                && _this.config.inputType.toLowerCase() === 'submit') {
                _this.config.disabled = true;
            }
            else {
                _this.config.disabled = false;
            }
        }, 10);
    };
    FormButtonComponent.decorators = [
        { type: Component, args: [{
                    selector: 'form-button',
                    styles: [""],
                    template: "<div *ngIf='!config.hidden' class=\"form-input\" [formGroup]=\"formGroup\">\n    <label [ngClass]=\"config.labelClass\" *ngIf=\"config.label && config.label!=''\">{{ config.label }}</label>\n    <div class=\"dynamic-field form-button\">\n        <button [disabled]=\"config.disabled\" [ngClass]=\"config.class\" type=\"submit\">\n        {{ config.text }}\n        </button>\n    </div>\n</div>"
                },] },
    ];
    /** @nocollapse */
    FormButtonComponent.ctorParameters = function () { return [
        { type: IterableDiffers }
    ]; };
    FormButtonComponent.propDecorators = {
        hostClass: [{ type: HostBinding, args: ['class',] }]
    };
    return FormButtonComponent;
}());
export { FormButtonComponent };
function FormButtonComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    FormButtonComponent.prototype.config;
    /** @type {?} */
    FormButtonComponent.prototype.formGroup;
    /** @type {?} */
    FormButtonComponent.prototype.differ;
    /** @type {?} */
    FormButtonComponent.prototype.btn;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnV0dG9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1keW5hbWljLWZvcm0vIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9idXR0b24vYnV0dG9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBYyxlQUFlLEVBQTBCLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7SUF3QjFHLDZCQUNFLE9BQXdCO1FBQ3RCLElBQUksQ0FBQyxNQUFNLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDakQ7SUFHRCxzQkFDSSwwQ0FBUzs7OztRQURiO1lBRVEsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDO1NBQy9COzs7T0FBQTs7OztJQUVILDZDQUFlOzs7SUFBZjtLQUNDOzs7O0lBRUQsdUNBQVM7OztJQUFUO1FBQUEsaUJBVUM7UUFURyxVQUFVLENBQUM7O1lBQ1gsSUFBTSxNQUFNLEdBQUcsS0FBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQzFDLEVBQUUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUM7bUJBQzVELEtBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLFdBQVcsRUFBRSxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUM7Z0JBQ3BELEtBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQzthQUNqQztZQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNOLEtBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQzthQUM5QjtTQUNGLEVBQUUsRUFBRSxDQUFFLENBQUM7S0FDVDs7Z0JBMUNGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsYUFBYTtvQkFDdkIsTUFBTSxFQUFFLENBQUMsRUFBRSxDQUFDO29CQUNaLFFBQVEsRUFBRSw0WUFPTDtpQkFDTjs7OztnQkFqQitCLGVBQWU7Ozs0QkE4QjlDLFdBQVcsU0FBQyxPQUFPOzs4QkE5QnBCOztTQWtCYSxtQkFBbUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIEl0ZXJhYmxlRGlmZmVycywgQWZ0ZXJWaWV3SW5pdCwgRG9DaGVjaywgSG9zdEJpbmRpbmcgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1Hcm91cCB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuaW1wb3J0IHsgRmllbGQgfSBmcm9tICcuLi8uLi9pbnRlcmZhY2VzL2ZpZWxkLmludGVyZmFjZSc7XG5pbXBvcnQgeyBGaWVsZENvbmZpZyB9IGZyb20gJy4uLy4uL2ludGVyZmFjZXMvZmllbGQtY29uZmlnLmludGVyZmFjZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2Zvcm0tYnV0dG9uJyxcbiAgc3R5bGVzOiBbYGBdLFxuICB0ZW1wbGF0ZTogYDxkaXYgKm5nSWY9JyFjb25maWcuaGlkZGVuJyBjbGFzcz1cImZvcm0taW5wdXRcIiBbZm9ybUdyb3VwXT1cImZvcm1Hcm91cFwiPlxuICAgIDxsYWJlbCBbbmdDbGFzc109XCJjb25maWcubGFiZWxDbGFzc1wiICpuZ0lmPVwiY29uZmlnLmxhYmVsICYmIGNvbmZpZy5sYWJlbCE9JydcIj57eyBjb25maWcubGFiZWwgfX08L2xhYmVsPlxuICAgIDxkaXYgY2xhc3M9XCJkeW5hbWljLWZpZWxkIGZvcm0tYnV0dG9uXCI+XG4gICAgICAgIDxidXR0b24gW2Rpc2FibGVkXT1cImNvbmZpZy5kaXNhYmxlZFwiIFtuZ0NsYXNzXT1cImNvbmZpZy5jbGFzc1wiIHR5cGU9XCJzdWJtaXRcIj5cbiAgICAgICAge3sgY29uZmlnLnRleHQgfX1cbiAgICAgICAgPC9idXR0b24+XG4gICAgPC9kaXY+XG48L2Rpdj5gXG59KVxuZXhwb3J0IGNsYXNzIEZvcm1CdXR0b25Db21wb25lbnQgaW1wbGVtZW50cyBGaWVsZCwgQWZ0ZXJWaWV3SW5pdCwgRG9DaGVjayB7XG4gIGNvbmZpZzogRmllbGRDb25maWc7XG4gIGZvcm1Hcm91cDogRm9ybUdyb3VwO1xuICBkaWZmZXI6IGFueTtcbiAgYnRuOiBhbnk7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgZGlmZmVyczogSXRlcmFibGVEaWZmZXJzKSB7XG4gICAgICB0aGlzLmRpZmZlciA9IGRpZmZlcnMuZmluZChbXSkuY3JlYXRlKG51bGwpO1xufVxuXG5cbkBIb3N0QmluZGluZygnY2xhc3MnKVxuZ2V0IGhvc3RDbGFzcygpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy5jb25maWcuZGl2Q2xhc3M7XG4gICAgfVxuXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgfVxuXG4gIG5nRG9DaGVjaygpIHtcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgY29uc3QgY2hhbmdlID0gdGhpcy5kaWZmZXIuZGlmZih0aGlzLmJ0bik7XG4gICAgICBpZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignZm9ybScpLmNsYXNzTmFtZS5pbmNsdWRlcygnbmctaW52YWxpZCcpXG4gICAgICAgICAgJiYgdGhpcy5jb25maWcuaW5wdXRUeXBlLnRvTG93ZXJDYXNlKCkgPT09ICdzdWJtaXQnKSB7XG4gICAgICAgICAgICB0aGlzLmNvbmZpZy5kaXNhYmxlZCA9IHRydWU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmNvbmZpZy5kaXNhYmxlZCA9IGZhbHNlO1xuICAgICAgfVxuICAgIH0sIDEwICk7XG4gIH1cbn1cbiJdfQ==