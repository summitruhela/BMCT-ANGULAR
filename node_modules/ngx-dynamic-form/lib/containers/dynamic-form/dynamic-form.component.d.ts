import { OnInit, EventEmitter } from '@angular/core';
import { FormGroup, FormBuilder } from '@angular/forms';
import { FieldConfig } from '../../interfaces/field-config.interface';
import { Observable } from 'rxjs';
export declare class DynamicFormComponent implements OnInit {
    private fb;
    config: FieldConfig[];
    field: any;
    submit: EventEmitter<any>;
    form: FormGroup;
    readonly controls: FieldConfig[];
    readonly changes: Observable<any>;
    readonly valid: boolean;
    readonly value: any;
    reset(): void;
    constructor(fb: FormBuilder);
    ngOnInit(): void;
    /**
     * Create FormGroup for the Form to be generated
     */
    private createGroup();
    /**
     * Create Form Control in FormBuilder
     * @param config
     */
    private createControl(config);
    /**
     * Handle Form Submit
     * @param event
     */
    handleSubmit(event: Event): void;
    /**
     * Disables an element in the form
     * @param name
     * @param disable
     */
    setDisabled(name: string, disable: boolean): void;
    /**
     * Sets value of a Form control/element
     * @param name
     * @param value
     */
    setValue(name: string, value: any): void;
}
