{"version":3,"file":"ngx-img.umd.min.js","sources":["../../tmp/module/service/ngx-img.service.ts","../../tmp/module/component/ngx-img.component.ts","../../tmp/module/component/ngx-img-crop.component.ts","../../tmp/module/ngx-img.module.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nexport class NgxImgService {\n/**\n * @param {?} src\n * @param {?} config\n * @param {?=} mime_type\n * @return {?}\n */\ncompress(src: string, config: any, mime_type?: string) {\n    mime_type = mime_type ? mime_type : src.substring('data:image/'.length, src.indexOf(';base64'));\n    return new Promise((resolve: any, reject: any) => {\n      const /** @type {?} */ img = new Image();\n      img.src = src;\n      img.onerror = () => {\n        reject();\n      };\n      img.onload = () => {\n        const /** @type {?} */ cvs = document.createElement('canvas');\n        const /** @type {?} */ ctx = cvs.getContext('2d');\n        const /** @type {?} */ aspectRatio = img.naturalWidth / img.naturalHeight;\n\n        let /** @type {?} */ maxWidth = config.maxWidth ? config.maxWidth : Infinity;\n        let /** @type {?} */ maxHeight = config.maxHeight ? config.maxHeight : Infinity;\n        let /** @type {?} */ minWidth = config.minWidth ? config.minWidth : 0;\n        let /** @type {?} */ minHeight = config.minHeight ? config.minHeight : 0;\n\n        let /** @type {?} */ width = img.naturalWidth;\n        let /** @type {?} */ height = img.naturalHeight;\n\n        if (maxWidth < Infinity && maxHeight < Infinity) {\n          if (maxHeight * aspectRatio > maxWidth) {\n            maxHeight = maxWidth / aspectRatio;\n          } else {\n            maxWidth = maxHeight * aspectRatio;\n          }\n        } else if (maxWidth < Infinity) {\n          maxHeight = maxWidth / aspectRatio;\n        } else if (maxHeight < Infinity) {\n          maxWidth = maxHeight * aspectRatio;\n        }\n\n        if (minWidth > 0 && minHeight > 0) {\n          if (minHeight * aspectRatio > minWidth) {\n            minHeight = minWidth / aspectRatio;\n          } else {\n            minWidth = minHeight * aspectRatio;\n          }\n        } else if (minWidth > 0) {\n          minHeight = minWidth / aspectRatio;\n        } else if (minHeight > 0) {\n          minWidth = minHeight * aspectRatio;\n        }\n\n        width = Math.min(Math.max(width, minWidth), maxWidth);\n        height = Math.min(Math.max(height, minHeight), maxHeight);\n\n        const /** @type {?} */ destX = -width / 2;\n        const /** @type {?} */ destY = -height / 2;\n        const /** @type {?} */ destWidth = width;\n        const /** @type {?} */ destHeight = height;\n\n        cvs.width = width;\n        cvs.height = height;\n\n        ctx.translate(width / 2, height / 2);\n        ctx.scale(1, 1);\n        ctx.drawImage(\n          img,\n          Math.floor(destX),\n          Math.floor(destY),\n          Math.floor(destWidth),\n          Math.floor(destHeight),\n        );\n        ctx.restore();\n        resolve(cvs.toDataURL(mime_type, config.quality));\n      };\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgxImgService_tsickle_Closure_declarations() {\n/** @type {?} */\nNgxImgService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgxImgService.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport {NgxImgService} from '../service/ngx-img.service';\nexport class NgxImgComponent implements OnInit, OnDestroy {\n   alt = '';\n   fileName = '';\n   imgSrc = '';\n   remove = true;\n   fileInput: any;\n   config: {\n    fileSize?: number,\n    minWidth?: number,\n    maxWidth?: number,\n    minHeight?: number,\n    maxHeight?: number,\n    fileType?: string[],\n    height?: number,\n    quality?: number,\n    crop?: any\n  };\n   errorTexts: {\n    fileSize?: string,\n    minWidth?: string,\n    maxWidth?: string,\n    minHeight?: string,\n    maxHeight?: string,\n    imageFormat?: string,\n    fileType?: string\n  };\n   text: {\n    default?: string,\n    _default?: string,\n    button?: string,\n    try_again?: string,\n    replace?: string,\n    reset?: string,\n    error?: string\n  };\n\n  hasPreview = false;\n  hasError = false;\n  isLoading = false;\n  _config: {\n    fileSize?: number,\n    minWidth?: number,\n    maxWidth?: number,\n    minHeight?: number,\n    maxHeight?: number,\n    fileType?: string[],\n    height?: number,\n    quality?: number,\n    crop?: any\n  } = {\n    fileSize: 2048,\n    minWidth: 0,\n    maxWidth: 0,\n    minHeight: 0,\n    maxHeight: 0,\n    fileType: ['.gif', '.jpeg', '.png', '.jpg'],\n    quality: 0.8\n  };\n  _text: {\n    default?: string,\n    _default?: string,\n    button?: string,\n    try_again?: string,\n    replace?: string,\n    reset?: string,\n    error?: string\n  } = {\n    default: 'Drag and drop',\n    _default: 'Drag and drop or click',\n    button: 'Choose File',\n    try_again: 'Try Again',\n    replace: 'Drag and drop or click to replace',\n    reset: 'Remove',\n    error: 'Oops, something wrong happened.'\n  };\n  _errorTexts: {\n    fileSize?: string,\n    minWidth?: string,\n    maxWidth?: string,\n    minHeight?: string,\n    maxHeight?: string,\n    imageFormat?: string,\n    fileType?: string\n  } = {\n    fileSize: 'The file size is too big ({{ value }} max).',\n    minWidth: 'The image width is too small ({{ value }}}px min).',\n    maxWidth: 'The image width is too big ({{ value }}}px max).',\n    minHeight: 'The image height is too small ({{ value }}}px min).',\n    maxHeight: 'The image height is too big ({{ value }}}px max).',\n    imageFormat: 'The image format is not allowed ({{ value }} only).',\n    fileType: 'The file type is not allowed.'\n  };\n  errors: any = [];\n  file: any;\n  mode = 'upload';\n   onChange: EventEmitter<any> = new EventEmitter();\n   onSelect: EventEmitter<any> = new EventEmitter();\n   onReset: EventEmitter<any> = new EventEmitter();\n/**\n * @param {?} _service\n * @param {?} _ref\n */\nconstructor(private _service: NgxImgService,\nprivate _ref: ChangeDetectorRef) {\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    this.reset();\n    this._text = Object.assign(this._text, this.text);\n    this._errorTexts = Object.assign(this._errorTexts, this.errorTexts);\n    this._config = Object.assign(this._config, this.config);\n    this.markForCheck();\n  }\n/**\n * @param {?} e\n * @return {?}\n */\nfileChangeListener(e: any) {\n    this.hasError = false;\n    this.errors = [];\n    if (!e.target.files.length) {\n      this.reset();\n      return false;\n    }\n\n    this.file = e.target.files[0];\n    if (!this.validate()) {\n      this.hasError = true;\n      this.reset();\n      return false;\n    }\n\n    this.fileName = this.file.name;\n    this.onChange.emit(this.file);\n\n    if (this.file.type.split('/')[0] === 'image') {\n      this.isLoading = true;\n      const /** @type {?} */ reader: FileReader = new FileReader();\n      reader.onloadend = (ev: any) => {\n        this.imgSrc = ev.target.result;\n        this.fileName = this.file.name;\n        this.hasPreview = true;\n        this.isLoading = false;\n        if (this._config.crop) {\n          this.mode = 'crop';\n          this.markForCheck();\n        } else {\n          this._service.compress(this.imgSrc, this._config).then((res: any) => {\n            this.onSelectEvent(res);\n            this.markForCheck();\n          })\n            .catch(() => {\n              this.onSelectEvent(this.imgSrc);\n              this.markForCheck();\n            });\n        }\n      };\n      reader.readAsDataURL(this.file);\n      this.markForCheck();\n    }\n    this.markForCheck();\n  }\n/**\n * @return {?}\n */\nreset() {\n    this.mode = 'upload';\n    this.file = null;\n    this.imgSrc = '';\n    this.fileName = '';\n    this.hasPreview = false;\n    if (this.fileInput) {\n      this.fileInput.nativeElement.value = '';\n    }\n    this.onReset.emit();\n    this.markForCheck();\n  }\n/**\n * @return {?}\n */\nvalidate() {\n    this.errors = [];\n    if (this._config.fileType.length !== 0 &&\n      this._config.fileType.indexOf(this.file.type) === -1 && this._config.fileType.indexOf(`.${this.file.name.split('.').pop()}`) === -1) {\n      this.errors = [...this.errors, this._errorTexts.fileType];\n    }\n\n    if (this._config.fileSize !== 0 && (this.file.size / 1024) > this._config.fileSize) {\n      this.errors = [...this.errors, this._errorTexts.fileSize.replace('{{ value }}', this.sizeToByte(this._config.fileSize))];\n    }\n\n    if (this._config.minWidth !== 0 && this._config.minWidth >= this.file.width) {\n      this.errors = [...this.errors, this._errorTexts.minWidth.replace('{{ value }}', this._config.minWidth.toString())];\n    }\n\n    if (this._config.maxWidth !== 0 && this._config.maxWidth <= this.file.width) {\n      this.errors = [...this.errors, this._errorTexts.maxWidth.replace('{{ value }}', this._config.maxWidth.toString())];\n    }\n\n    if (this._config.minHeight !== 0 && this._config.minHeight >= this.file.height) {\n      this.errors = [...this.errors, this._errorTexts.minHeight.replace('{{ value }}', this._config.minHeight.toString())];\n    }\n\n    if (this._config.maxHeight !== 0 && this._config.maxHeight <= this.file.height) {\n      this.errors = [...this.errors, this._errorTexts.maxHeight.replace('{{ value }}', this._config.maxHeight.toString())];\n    }\n\n    return !this.errors.length;\n  }\n/**\n * @param {?} size\n * @return {?}\n */\nsizeToByte(size: number): string {\n    const /** @type {?} */ units = ['KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    let /** @type {?} */ i = 0;\n    while (size >= 1024) {\n      size /= 1024;\n      ++i;\n    }\n    return size.toFixed(1) + ' ' + units[i];\n  };\n/**\n * @param {?} data\n * @return {?}\n */\nonSelectEvent(data: any) {\n    this.onSelect.emit(data);\n    this.markForCheck();\n  }\n/**\n * @return {?}\n */\npublic markForCheck() {\n    setTimeout(() => {\n      if (!this._ref['destroyed']) {\n        this._ref.markForCheck();\n        this._ref.detectChanges();\n      }\n    });\n    setTimeout(() => {\n      if (!this._ref['destroyed']) {\n        this._ref.markForCheck();\n        this._ref.detectChanges();\n      }\n    }, 300);\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.reset();\n    this._ref.detach();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngx-img',\n  template: `\n    <ng-container [ngSwitch]=\"mode\">\n      <ng-template [ngSwitchCase]=\"'upload'\">\n        <div class=\"ngx-img-wrapper\" [class.has-preview]=\"hasPreview\" [class.has-error]=\"hasError\"\n             [style.height]=\"_config.height\">\n          <div class=\"ngx-img-message\" *ngIf=\"!hasPreview\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"60\" height=\"60\" viewBox=\"0 0 640 640\" class=\"ngx-img-upload\">\n              <path class=\"st-1\"\n                    d=\"M411.312 372.688l-64-64c-6.247-6.248-16.379-6.248-22.627 0l-64 64c-6.248 6.247-6.248 16.379 0 22.627s16.379 6.248 22.628 0l36.687-36.687v137.372c0 8.837 7.163 16 16 16s16-7.163 16-16v-137.372l36.688 36.687c3.123 3.123 7.217 4.685 11.312 4.685s8.189-1.562 11.312-4.688c6.25-6.247 6.25-16.377 0-22.624z\"></path>\n              <path class=\"st-2\"\n                    d=\"M512.2 512h-112.2c-8.837 0-16-7.163-16-16s7.163-16 16-16h112.2c52.824 0 95.8-42.976 95.8-95.8s-42.976-95.8-95.8-95.8c-11.33 0-22.371 1.938-32.817 5.764-6.979 2.555-14.798-0.031-18.876-6.243s-3.343-14.415 1.776-19.803c11.425-12.022 17.717-27.692 17.717-44.118 0-35.29-28.71-64-64-64-20.536 0-39.32 9.492-51.535 26.042-7.374 9.991-11.668 21.692-12.417 33.836-0.419 6.781-5.073 12.558-11.609 14.409-6.539 1.854-13.53-0.629-17.441-6.182-3.52-4.998-7.331-9.814-11.329-14.314-30.367-34.185-73.984-53.791-119.669-53.791-88.224 0-160 71.775-160 160s71.776 160 160 160h80c8.836 0 16 7.163 16 16s-7.164 16-16 16h-80c-105.869 0-192-86.131-192-192s86.131-192 192-192c51.271 0 100.368 20.573 136.315 56.791 2.802-6.217 6.28-12.168 10.402-17.752 18.044-24.445 46.933-39.039 77.283-39.039 52.935 0 96 43.065 96 96 0 11.223-1.949 22.202-5.685 32.532 1.954-0.089 3.917-0.132 5.885-0.132 70.469 0 127.8 57.331 127.8 127.8s-57.331 127.8-127.8 127.8z\"></path>\n            </svg>\n            <ng-template [ngIf]=\"!hasError\" [ngIfElse]=\"withErrorBlock\">\n              <p>{{ _text.default }}</p>\n              <button class=\"ngx-img-button\">{{ _text.button }}</button>\n            </ng-template>\n            <ng-template #withErrorBlock>\n              <p>{{ _text._default }}</p>\n              <div class=\"ngx-img-error\" *ngIf=\"hasError\">\n                <ul>\n                  <li *ngFor=\"let error of errors\">{{ error }}</li>\n                </ul>\n              </div>\n              <button style=\"margin-top: 0\" class=\"ngx-img-button\">{{ _text.try_again }}</button>\n            </ng-template>\n          </div>\n          <div class=\"ngx-img-loader\" *ngIf=\"isLoading\"></div>\n          <input type=\"file\" [accept]=\"_config.fileType.join(', ')\" #fileInput (change)=\"fileChangeListener($event)\">\n          <button *ngIf=\"remove && hasPreview\" type=\"button\" class=\"ngx-img-clear\" (click)=\"reset()\">{{ _text.reset }}\n          </button>\n          <div class=\"ngx-img-preview\" *ngIf=\"hasPreview\">\n            <span class=\"ngx-img-render\"><img [src]=\"imgSrc\" [alt]=\"alt\"></span>\n            <div class=\"ngx-img-infos\">\n              <div class=\"ngx-img-infos-inner\">\n                <p class=\"ngx-img-filename\">{{fileName}}</p>\n                <p class=\"ngx-img-infos-message\">{{ _text.replace }}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </ng-template>\n      <ng-template [ngSwitchCase]=\"'crop'\">\n        <ngx-img-crop [config]=\"config\" [imgSrc]=\"imgSrc\" (onCrop)=\"onSelectEvent($event)\"\n                      (onReset)=\"reset()\"></ngx-img-crop>\n      </ng-template>\n    </ng-container>\n  `,\n  styles: [`\n    .ngx-img-wrapper{display:block;position:relative;cursor:pointer;overflow:hidden;width:100%;max-width:100%;height:400px;padding:5px 10px;font-family:Helvetica,Arial,sans-serif;font-size:14px;font-weight:300;line-height:22px;color:#333;background-color:#fff;background-image:none;text-align:center;border:2px solid #e5e5e5;-webkit-transition:border-color .15s linear;transition:border-color .15s linear}.ngx-img-wrapper:hover{background-size:30px 30px;background-image:linear-gradient(-45deg,#f6f6f6 25%,transparent 0,transparent 50%,#f6f6f6 0,#f6f6f6 75%,transparent 0,transparent);-webkit-animation:a 2s linear infinite;animation:a 2s linear infinite}.ngx-img-wrapper.has-preview .ngx-img-clear{display:block}.ngx-img-wrapper.has-error{border-color:#f44336}.ngx-img-wrapper.has-error .ngx-img-message .ngx-img-error{display:block}.ngx-img-wrapper.has-error:hover .ngx-img-errors-container{visibility:visible;opacity:1;-webkit-transition-delay:0s;transition-delay:0s}.ngx-img-wrapper.disabled input{cursor:not-allowed}.ngx-img-wrapper.disabled:hover{background-image:none;-webkit-animation:none;animation:none}.ngx-img-wrapper.disabled .ngx-img-message{opacity:.5;text-decoration:line-through}.ngx-img-wrapper.disabled .ngx-img-infos-message{display:none}.ngx-img-wrapper input{position:absolute;top:0;right:0;bottom:0;left:0;height:100%;width:100%;opacity:0;cursor:pointer;z-index:3}.ngx-img-wrapper .ngx-img-button{font-size:.7rem;padding:.6rem 1rem;background:#17a2c4;-webkit-box-shadow:none;box-shadow:none;border-radius:10em;border:0;color:#fff;margin-top:1rem;text-transform:uppercase;display:inline-block;font-weight:400;line-height:1.25;text-align:center;white-space:nowrap;vertical-align:middle;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.ngx-img-wrapper .ngx-img-message{position:relative;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.ngx-img-wrapper .ngx-img-message svg.ngx-img-upload .st-1,.ngx-img-wrapper .ngx-img-message svg.ngx-img-upload .st-2{fill:#17a2c4}.ngx-img-wrapper .ngx-img-message div,.ngx-img-wrapper .ngx-img-message p{margin:5px 0 0}.ngx-img-wrapper .ngx-img-message div.ngx-img-error,.ngx-img-wrapper .ngx-img-message p.ngx-img-error{color:#f44336;font-weight:700;display:none}.ngx-img-wrapper .ngx-img-message div li,.ngx-img-wrapper .ngx-img-message div ul,.ngx-img-wrapper .ngx-img-message p li,.ngx-img-wrapper .ngx-img-message p ul{list-style:none;padding:0}.ngx-img-wrapper .ngx-img-clear{display:block;position:absolute;opacity:0;z-index:4;top:10px;right:10px;background:none;border:2px solid #fff;text-transform:uppercase;font-family:Helvetica,Arial;font-size:11px;padding:4px 8px;font-weight:700;color:#fff;-webkit-transition:all .15s linear;transition:all .15s linear}.ngx-img-wrapper .ngx-img-clear:hover{background:hsla(0,0%,100%,.2)}.ngx-img-wrapper .ngx-img-preview{display:block;position:absolute;z-index:1;background-color:#fff;padding:5px;width:100%;height:100%;top:0;right:0;bottom:0;left:0;overflow:hidden;text-align:center}.ngx-img-wrapper .ngx-img-preview .ngx-img-render img{top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%);position:relative;max-width:100%;max-height:100%;background-color:#fff;-webkit-transition:border-color .15s linear;transition:border-color .15s linear}.ngx-img-wrapper .ngx-img-preview .ngx-img-render i{font-size:70px;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);position:absolute;color:#777}.ngx-img-wrapper .ngx-img-preview .ngx-img-render .ngx-img-extension{position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);margin-top:10px;text-transform:uppercase;font-weight:900;letter-spacing:-.03em;font-size:13px;width:42px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ngx-img-wrapper .ngx-img-preview .ngx-img-infos{position:absolute;left:0;top:0;right:0;bottom:0;z-index:2;background:rgba(0,0,0,.7);opacity:0;-webkit-transition:opacity .15s linear;transition:opacity .15s linear}.ngx-img-wrapper .ngx-img-preview .ngx-img-infos .ngx-img-infos-inner{position:absolute;top:50%;-webkit-transform:translateY(-40%);transform:translateY(-40%);-webkit-backface-visibility:hidden;backface-visibility:hidden;width:100%;padding:0 20px;-webkit-transition:all .2s ease;transition:all .2s ease}.ngx-img-wrapper .ngx-img-preview .ngx-img-infos .ngx-img-infos-inner p{padding:0;margin:0;position:relative;width:100%;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;color:#fff;text-align:center;line-height:25px;font-weight:700}.ngx-img-wrapper .ngx-img-preview .ngx-img-infos .ngx-img-infos-inner p.ngx-img-infos-message{margin-top:15px;padding-top:15px;font-size:12px;position:relative;opacity:.5}.ngx-img-wrapper .ngx-img-preview .ngx-img-infos .ngx-img-infos-inner p.ngx-img-infos-message:before{content:\"\";position:absolute;top:0;left:50%;-webkit-transform:translate(-50%);transform:translate(-50%);background:#fff;width:30px;height:2px}.ngx-img-wrapper:hover .ngx-img-clear,.ngx-img-wrapper:hover .ngx-img-preview .ngx-img-infos{opacity:1}.ngx-img-wrapper:hover .ngx-img-preview .ngx-img-infos .ngx-img-infos-inner{margin-top:-5px}.ngx-img-wrapper.touch-fallback{height:auto!important}.ngx-img-wrapper.touch-fallback:hover{background-image:none;-webkit-animation:none;animation:none}.ngx-img-wrapper.touch-fallback .ngx-img-preview{position:relative;padding:0;display:block}.ngx-img-wrapper.touch-fallback .ngx-img-preview .ngx-img-render{display:block;position:relative}.ngx-img-wrapper.touch-fallback .ngx-img-preview .ngx-img-render img{position:relative;-webkit-transform:translate(0);transform:translate(0)}.ngx-img-wrapper.touch-fallback .ngx-img-preview .ngx-img-infos{position:relative;opacity:1;background:transparent}.ngx-img-wrapper.touch-fallback .ngx-img-preview .ngx-img-infos .ngx-img-infos-inner{position:relative;top:0;-webkit-transform:translate(0);transform:translate(0);padding:5px 90px 5px 0}.ngx-img-wrapper.touch-fallback .ngx-img-preview .ngx-img-infos .ngx-img-infos-inner p{padding:0;margin:0;position:relative;width:100%;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;color:#777;text-align:left;line-height:25px}.ngx-img-wrapper.touch-fallback .ngx-img-preview .ngx-img-infos .ngx-img-infos-inner p.ngx-img-filename{font-weight:700}.ngx-img-wrapper.touch-fallback .ngx-img-preview .ngx-img-infos .ngx-img-infos-inner p.ngx-img-infos-message{margin-top:0;padding-top:0;font-size:11px;position:relative;opacity:1}.ngx-img-wrapper.touch-fallback .ngx-img-message{-webkit-transform:translate(0);transform:translate(0);padding:40px 0}.ngx-img-wrapper.touch-fallback .ngx-img-clear{top:auto;bottom:23px;opacity:1;border-color:hsla(0,0%,47%,.7);color:#777}.ngx-img-wrapper.touch-fallback.has-preview .ngx-img-message{display:none}.ngx-img-wrapper.touch-fallback:hover .ngx-img-preview .ngx-img-infos .ngx-img-infos-inner{margin-top:0}.ngx-img-wrapper .ngx-img-loader{position:absolute;top:15px;right:15px;display:block;z-index:5}.ngx-img-wrapper .ngx-img-loader:after{display:block;position:relative;width:20px;height:20px;-webkit-animation:b .6s linear infinite;animation:b .6s linear infinite;border-radius:100%;border-top:1px solid #ccc;border-bottom:1px solid #777;border-left:1px solid #ccc;border-right:1px solid #777;content:\"\"}.ngx-img-wrapper .ngx-img-errors-container{position:absolute;left:0;top:0;right:0;bottom:0;z-index:2;background:rgba(244,67,54,.8);text-align:left;visibility:hidden;opacity:0;-webkit-transition:visibility 0s linear .15s,opacity .15s linear;transition:visibility 0s linear .15s,opacity .15s linear}.ngx-img-wrapper .ngx-img-errors-container ul{padding:10px 20px;margin:0;position:absolute;left:0;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.ngx-img-wrapper .ngx-img-errors-container ul li{margin-left:20px;color:#fff;font-weight:700}.ngx-img-wrapper .ngx-img-errors-container.visible{visibility:visible;opacity:1;-webkit-transition-delay:0s;transition-delay:0s}.ngx-img-wrapper~.ngx-img-errors-container ul{padding:0;margin:15px 0}.ngx-img-wrapper~.ngx-img-errors-container ul li{margin-left:20px;color:#f44336;font-weight:700}@-webkit-keyframes a{0%{background-position:0 0}to{background-position:60px 30px}}@keyframes a{0%{background-position:0 0}to{background-position:60px 30px}}@-webkit-keyframes b{0%{-webkit-transform:rotate(-1turn);transform:rotate(-1turn)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@keyframes b{0%{-webkit-transform:rotate(-1turn);transform:rotate(-1turn)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}\n  `],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgxImgService, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'alt': [{ type: Input },],\n'fileName': [{ type: Input },],\n'imgSrc': [{ type: Input },],\n'remove': [{ type: Input },],\n'fileInput': [{ type: ViewChild, args: ['fileInput', ] },],\n'config': [{ type: Input },],\n'errorTexts': [{ type: Input },],\n'text': [{ type: Input },],\n'onChange': [{ type: Output },],\n'onSelect': [{ type: Output },],\n'onReset': [{ type: Output },],\n};\n}\n\nfunction NgxImgComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nNgxImgComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgxImgComponent.ctorParameters;\n/** @type {?} */\nNgxImgComponent.propDecorators;\n/** @type {?} */\nNgxImgComponent.prototype.alt;\n/** @type {?} */\nNgxImgComponent.prototype.fileName;\n/** @type {?} */\nNgxImgComponent.prototype.imgSrc;\n/** @type {?} */\nNgxImgComponent.prototype.remove;\n/** @type {?} */\nNgxImgComponent.prototype.fileInput;\n/** @type {?} */\nNgxImgComponent.prototype.config;\n/** @type {?} */\nNgxImgComponent.prototype.errorTexts;\n/** @type {?} */\nNgxImgComponent.prototype.text;\n/** @type {?} */\nNgxImgComponent.prototype.hasPreview;\n/** @type {?} */\nNgxImgComponent.prototype.hasError;\n/** @type {?} */\nNgxImgComponent.prototype.isLoading;\n/** @type {?} */\nNgxImgComponent.prototype._config;\n/** @type {?} */\nNgxImgComponent.prototype._text;\n/** @type {?} */\nNgxImgComponent.prototype._errorTexts;\n/** @type {?} */\nNgxImgComponent.prototype.errors;\n/** @type {?} */\nNgxImgComponent.prototype.file;\n/** @type {?} */\nNgxImgComponent.prototype.mode;\n/** @type {?} */\nNgxImgComponent.prototype.onChange;\n/** @type {?} */\nNgxImgComponent.prototype.onSelect;\n/** @type {?} */\nNgxImgComponent.prototype.onReset;\n/** @type {?} */\nNgxImgComponent.prototype._service;\n/** @type {?} */\nNgxImgComponent.prototype._ref;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\nimport Cropper from 'cropperjs';\nimport {NgxImgService} from '../service/ngx-img.service';\nexport class NgxImgCropComponent implements OnInit, OnDestroy {\n   config: any = {};\n   imgSrc: any;\n   onCrop: EventEmitter<any> = new EventEmitter();\n   onReset: EventEmitter<any> = new EventEmitter();\n  _text = {\n    reset: 'Remove'\n  };\n\n  _config: any = {\n    crop: [\n      {\n        ratio: null,\n        viewMode: 0\n      }\n    ]\n  };\n  timer: any = [];\n  cropper: any = [];\n  imgData: any = [];\n/**\n * @param {?} _service\n * @param {?} _ref\n */\nconstructor(private _service: NgxImgService,\nprivate _ref: ChangeDetectorRef) {\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    this._config = Object.assign(this._config, this.config);\n    this.cropper = [];\n    this.imgData = [];\n    this.initializeCrop();\n  }\n/**\n * @return {?}\n */\ninitializeCrop() {\n    setTimeout(() => {\n      this._config.crop.forEach((opt: any, i: number) => {\n        const /** @type {?} */ el: any = document.getElementById('ngx-crop-img-' + i);\n        const /** @type {?} */ options: any = {};\n        if (opt.width) {\n          options.width = opt.width;\n        }\n        if (opt.height) {\n          options.height = opt.height;\n        }\n        if (opt.minWidth) {\n          options.minWidth = opt.minWidth;\n        }\n        if (opt.minHeight) {\n          options.minHeight = opt.minHeight;\n        }\n        if (opt.maxWidth) {\n          options.maxWidth = opt.maxWidth;\n        }\n        if (opt.maxHeight) {\n          options.maxHeight = opt.maxHeight;\n        }\n        this.cropper[i] = new Cropper(el, {\n          aspectRatio: opt.ratio,\n          viewMode: opt.viewMode || 0,\n          crop: () => {\n            if (this.timer[i]) {\n              clearTimeout(this.timer[i]);\n            }\n            this.timer[i] = setTimeout(() => {\n              this.onCropEvent(i, this.cropper[i].getCroppedCanvas(options).toDataURL('image/png'));\n              this.markForCheck();\n            }, 500);\n          }\n        });\n        this.markForCheck();\n      });\n      this.markForCheck();\n    }, 100);\n  }\n/**\n * @param {?} i\n * @param {?} data\n * @return {?}\n */\nonCropEvent(i: number, data: any) {\n    this._service.compress(data, this._config).then((res: any) => {\n      this.imgData[i] = res;\n      const /** @type {?} */ img = this.imgData.length === 1 ? this.imgData[i] : this.imgData;\n      this.onCrop.emit(img);\n      this.markForCheck();\n    })\n    .catch(() => {\n      this.imgData[i] = data;\n      const /** @type {?} */ img = this.imgData.length === 1 ? this.imgData[i] : this.imgData;\n      this.onCrop.emit(img);\n      this.markForCheck();\n    });\n  }\n/**\n * @return {?}\n */\nreset() {\n    this.cropper.forEach((el: any) => {\n      if (el) {\n        el.destroy();\n      }\n    });\n    this.cropper = [];\n    this.imgData = [];\n    this.imgSrc = '';\n    this.onReset.emit();\n    this.markForCheck();\n  }\n/**\n * @return {?}\n */\npublic markForCheck() {\n    setTimeout(() => {\n      if (!this._ref['destroyed']) {\n        this._ref.markForCheck();\n        this._ref.detectChanges();\n      }\n    });\n    setTimeout(() => {\n      if (!this._ref['destroyed']) {\n        this._ref.markForCheck();\n        this._ref.detectChanges();\n      }\n    }, 300);\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.reset();\n    this._ref.detach();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngx-img-crop',\n  template: `\n    <div class=\"ngx-img-crop-wrapper\" [style.height]=\"_config.height\">\n      <button type=\"button\" class=\"ngx-img-clear\" (click)=\"reset()\">{{ _text.reset }}</button>\n      <ng-template ngFor [ngForOf]=\"_config.crop\" let-i=\"index\">\n        <div class=\"ngx-img-crop-col\">\n          <img [id]=\"'ngx-crop-img-' + i\" [src]=\"imgSrc\">\n        </div>\n      </ng-template>\n    </div>\n  `,\n  styles: [`\n    .ngx-img-crop-wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:stretch;-ms-flex-pack:stretch;justify-content:stretch;-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch;position:relative;cursor:pointer;overflow:hidden;width:100%;max-width:100%;height:400px;font-family:Helvetica,Arial,sans-serif;font-size:14px;font-weight:300;line-height:22px;color:#333;background-color:#fff;background-image:none;text-align:center;border:2px solid #e5e5e5;-webkit-box-sizing:content-box;box-sizing:content-box}.ngx-img-crop-wrapper .ngx-img-clear{display:block;position:absolute;opacity:0;z-index:1;top:10px;right:10px;background:none;border:2px solid #fff;text-transform:uppercase;font-family:Helvetica,Arial;font-size:11px;padding:4px 8px;font-weight:700;color:#fff;-webkit-transition:all .15s linear;transition:all .15s linear}.ngx-img-crop-wrapper .ngx-img-clear:hover{background:hsla(0,0%,100%,.2)}.ngx-img-crop-wrapper:hover .ngx-img-clear{opacity:1}.ngx-img-crop-wrapper .ngx-img-crop-col{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-ms-flex:1;flex:1;margin:5px;-webkit-box-sizing:content-box;box-sizing:content-box}.ngx-img-crop-wrapper .ngx-img-crop-col>img{position:relative;max-width:100%;max-height:100%}.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-container{direction:ltr;font-size:0;line-height:0;position:relative;-ms-touch-action:none;touch-action:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-container img{display:block;height:100%;image-orientation:0deg;max-height:none!important;max-width:none!important;min-height:0!important;min-width:0!important;width:100%}.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-canvas,.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-crop-box,.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-drag-box,.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-modal,.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-wrap-box{bottom:0;left:0;position:absolute;right:0;top:0}.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-canvas,.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-wrap-box{overflow:hidden}.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-drag-box{background-color:#fff;opacity:0}.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-modal{background-color:#000;opacity:.5}.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-view-box{display:block;height:100%;outline-color:rgba(51,153,255,.75);outline:1px solid #17a2c4;overflow:hidden;width:100%}.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-dashed{border:0 dashed #eee;display:block;opacity:.5;position:absolute}.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-dashed.dashed-h{border-bottom-width:1px;border-top-width:1px;height:33.33333%;left:0;top:33.33333%;width:100%}.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-dashed.dashed-v{border-left-width:1px;border-right-width:1px;height:100%;left:33.33333%;top:0;width:33.33333%}.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-center{display:block;height:0;left:50%;opacity:.75;position:absolute;top:50%;width:0}.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-center:after,.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-center:before{background-color:#eee;content:\" \";display:block;position:absolute}.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-center:before{height:1px;left:-3px;top:0;width:7px}.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-center:after{height:7px;left:0;top:-3px;width:1px}.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-face,.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-line,.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-point{display:block;height:100%;opacity:.1;position:absolute;width:100%}.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-face{background-color:#fff;left:0;top:0}.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-line{background-color:#17a2c4}.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-line.line-e{cursor:e-resize;right:-3px;top:0;width:5px}.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-line.line-n{cursor:n-resize;height:5px;left:0;top:-3px}.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-line.line-w{cursor:w-resize;left:-3px;top:0;width:5px}.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-line.line-s{bottom:-3px;cursor:s-resize;height:5px;left:0}.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-point{background-color:#17a2c4;height:5px;opacity:.75;width:5px}.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-point.point-e{cursor:e-resize;margin-top:-3px;right:-3px;top:50%}.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-point.point-n{cursor:n-resize;left:50%;margin-left:-3px;top:-3px}.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-point.point-w{cursor:w-resize;left:-3px;margin-top:-3px;top:50%}.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-point.point-s{bottom:-3px;cursor:s-resize;left:50%;margin-left:-3px}.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-point.point-ne{cursor:ne-resize;right:-3px;top:-3px}.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-point.point-nw{cursor:nw-resize;left:-3px;top:-3px}.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-point.point-sw{bottom:-3px;cursor:sw-resize;left:-3px}.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-point.point-se{bottom:-3px;cursor:se-resize;height:20px;opacity:1;right:-3px;width:20px}@media (min-width:768px){.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-point.point-se{height:15px;width:15px}}@media (min-width:992px){.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-point.point-se{height:10px;width:10px}}@media (min-width:1200px){.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-point.point-se{height:5px;opacity:.75;width:5px}}.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-point.point-se:before{background-color:#17a2c4;bottom:-50%;content:\" \";display:block;height:200%;opacity:0;position:absolute;right:-50%;width:200%}.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-invisible{opacity:0}.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-hide{display:block;height:0;position:absolute;width:0}.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-hidden{display:none!important}.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-move{cursor:move}.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-crop{cursor:crosshair}.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-disabled .cropper-drag-box,.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-disabled .cropper-face,.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-disabled .cropper-line,.ngx-img-crop-wrapper .ngx-img-crop-col .cropper-disabled .cropper-point{cursor:not-allowed}\n  `],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgxImgService, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'config': [{ type: Input },],\n'imgSrc': [{ type: Input },],\n'onCrop': [{ type: Output },],\n'onReset': [{ type: Output },],\n};\n}\n\nfunction NgxImgCropComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nNgxImgCropComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgxImgCropComponent.ctorParameters;\n/** @type {?} */\nNgxImgCropComponent.propDecorators;\n/** @type {?} */\nNgxImgCropComponent.prototype.config;\n/** @type {?} */\nNgxImgCropComponent.prototype.imgSrc;\n/** @type {?} */\nNgxImgCropComponent.prototype.onCrop;\n/** @type {?} */\nNgxImgCropComponent.prototype.onReset;\n/** @type {?} */\nNgxImgCropComponent.prototype._text;\n/** @type {?} */\nNgxImgCropComponent.prototype._config;\n/** @type {?} */\nNgxImgCropComponent.prototype.timer;\n/** @type {?} */\nNgxImgCropComponent.prototype.cropper;\n/** @type {?} */\nNgxImgCropComponent.prototype.imgData;\n/** @type {?} */\nNgxImgCropComponent.prototype._service;\n/** @type {?} */\nNgxImgCropComponent.prototype._ref;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {CommonModule} from '@angular/common';\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport {NgxImgComponent} from './component/ngx-img.component';\nimport {NgxImgCropComponent} from './component/ngx-img-crop.component';\nimport {NgxImgService} from './service/ngx-img.service';\n\n// Export module's public API\nexport {NgxImgComponent} from './component/ngx-img.component';\nexport {NgxImgCropComponent} from './component/ngx-img-crop.component';\nexport {NgxImgService} from './service/ngx-img.service';\nexport class NgxImgModule {\n/**\n * @return {?}\n */\nstatic forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgxImgModule,\n      providers: [NgxImgService]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports: [NgxImgComponent, NgxImgCropComponent],\n  declarations: [NgxImgComponent, NgxImgCropComponent],\n  providers: [NgxImgService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgxImgModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNgxImgModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgxImgModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["NgxImgService","src","config","mime_type","substring","length","indexOf","Promise","resolve","reject","img","Image","onerror","onload","cvs","document","createElement","ctx","getContext","aspectRatio","naturalWidth","naturalHeight","maxWidth","Infinity","maxHeight","minWidth","minHeight","width","height","destX","Math","min","max","destY","destWidth","destHeight","translate","scale","drawImage","floor","restore","toDataURL","quality","type","Injectable","_service","_ref","this","fileSize","fileType","default","_default","button","try_again","replace","reset","error","imageFormat","EventEmitter","NgxImgComponent","_text","Object","assign","text","_errorTexts","errorTexts","_config","markForCheck","e","hasError","errors","target","files","file","validate","fileName","name","onChange","emit","split","isLoading","reader","FileReader","onloadend","ev","_this","imgSrc","result","hasPreview","crop","mode","compress","then","res","onSelectEvent","catch","readAsDataURL","fileInput","nativeElement","value","onReset","pop","size","sizeToByte","toString","i","toFixed","data","onSelect","setTimeout","detectChanges","detach","Component","args","selector","template","styles","changeDetection","ChangeDetectionStrategy","OnPush","ChangeDetectorRef","alt","Input","remove","ViewChild","Output","ratio","viewMode","NgxImgCropComponent","cropper","imgData","initializeCrop","forEach","opt","el","getElementById","options","Cropper","timer","clearTimeout","onCropEvent","getCroppedCanvas","onCrop","destroy","encapsulation","ViewEncapsulation","None","NgxImgModule","ngModule","providers","NgModule","imports","CommonModule","FormsModule","exports","declarations"],"mappings":"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"}